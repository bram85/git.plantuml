#+title: Draw git branch trees with PlantUML
#+author: Bram Schoenmakers
#+options: toc:2 tasks:nil
#+property: header-args :noweb no :tangle "git.plantuml" :results silent :exports code

* Example

#+begin_src plantuml :file example.png :results replace output graphics :exports both :tangle no
  @startuml
  !include git.plantuml

  $branch(master, 5)
  $branch(feature, 3, master, 2, master, 4)
  $branch(unfinished, 2, master, 2)

  $tag(master3, v0.1)
  @enduml
#+end_src

#+RESULTS:
[[file:example.png]]

* Source

#+begin_src plantuml :file /dev/null
  @startuml

  hide stereotype

  skinparam interface {
          backgroundColor Gold
  }

  skinparam rectangle {
          backgroundColor<<branchLabel>> Green
          fontColor<<branchLabel>> white
          backgroundColor<<tag>> Yellow
          fontSize 11
  }

  ''''''''''
  ' COMMIT '
  ''''''''''

  !function $commitName($branch, $number)
  !return %string($branch + $number)
  !endfunction

  !procedure $declareCommit($name, $label="")
  !if ($label != "")
  circle $label as $name
  !else
  circle $name
  !endif
  !endprocedure

  ' $parent1 and $parent2 are supposed to be declared
  !procedure $commit($name, $parent1, $parent2="", $label="")
  $declareCommit($name, $label)

  !if ($parent1 != "")
  ($parent1) -up-> ($name)
  !endif

  !if ($parent2 != "")
  ($parent2) -up-> ($name)
  !endif

  !endprocedure

  ''''''''''''''''
  ' BRANCH LABEL '
  ''''''''''''''''

  ' make sure that the commit is already part of the tree (using $commit) or declared
  !procedure $branchLabel($commit, $name)
  rectangle "$name" <<branchLabel>>
  $commit .right. [$name] #grey
  !endprocedure

  '''''''''''''
  ' TAG LABEL '
  '''''''''''''

  ' make sure that the commit is already part of the tree (using $commit) or declared
  !procedure $tag($commit, $name)
  together {
          rectangle "$name" <<tag>>
          $commit .[hidden]. [$name] #grey
          $commit .. [$name] #grey
          $commit .[hidden]. [$name] #grey
  }
  !endprocedure

  ''''''''''
  ' BRANCH '
  ''''''''''

  !procedure $branch($name, $numCommits, $fromBranch1="", $fromCommit1="", $toBranch="", $toCommit="", $fromBranch2="", $fromCommit2="")
  rectangle {
          !$counter = $numCommits
          !while $counter != 0
          !$parentCommit = %string($name + ($counter - 1))
          !$thisCommit = %string($name + $counter)

          $declareCommit($thisCommit, $counter)
          !if ($counter > 1)
          $declareCommit($parentCommit, %string($counter - 1))
          $commit($thisCommit, $parentCommit, $label=$counter)
          !endif

          !if ($counter == $numCommits)
          !if ($toBranch != "")
          $commit($commitName($toBranch, $toCommit), $thisCommit, $label=$toCommit)
          !endif

          $branchLabel($thisCommit, $name)
          !endif

          !if ($counter == 1 && $fromBranch1 != "")
          $declareCommit($commitName($fromBranch1, $fromCommit1), $fromCommit1)


          !if ($fromBranch2 != "")
          $declareCommit($commitName($fromBranch2, $fromCommit2), $fromCommit2)
          !endif

          $commit($thisCommit, $commitName($fromBranch1, $fromCommit1), $commitName($fromBranch2, $fromCommit2), $counter)
          !endif

          !$counter = $counter - 1
          !endwhile
  }
  !endprocedure
  @enduml
#+end_src
